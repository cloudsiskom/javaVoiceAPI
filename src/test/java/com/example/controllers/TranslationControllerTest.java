/*
 * SiskomVoiceAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import com.example.ApiHelper;
import com.example.SiskomVoiceAPIClient;
import com.example.exceptions.ApiException;
import com.example.models.TranslationSetup;
import com.example.models.TranslationSetupRequest;
import io.apimatic.core.testing.TestHelper;
import java.util.LinkedHashMap;
import java.util.Map;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class TranslationControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static SiskomVoiceAPIClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static TranslationController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getTranslationController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * Test case for translation setup.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTranslationSetup() throws Exception {
        // Parameters for the API call
        TranslationSetupRequest body = ApiHelper.deserialize(
                "{\r\n  \"from_number\": \"[FROM_NUMBER]\",\r\n  \"caller_didgateway\": \"[DID_GATE"
                + "WAY]\",\r\n  \"called_didgateway\": \"[DID_GATEWAY]\",\r\n  \"destination_number"
                + "\": \"[DESTINATION]\",\r\n  \"external_id\": \"[EXTERNAL_ID]\"\r\n}",
                TranslationSetupRequest.class);

        // Set callback and perform API call
        TranslationSetup result = null;
        try {
            result = controller.translationSetup(body);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", TestHelper.nullString);
        headers.put("Date", TestHelper.nullString);
        headers.put("Server", TestHelper.nullString);
        headers.put("X-Powered-By", TestHelper.nullString);
        headers.put("Content-Length", TestHelper.nullString);
        headers.put("ETag", TestHelper.nullString);
        headers.put("Keep-Alive", TestHelper.nullString);
        headers.put("Connection", TestHelper.nullString);
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\r\n  \"respose\": true,\r\n  \"action\": \"setup\",\r\n  \"transaction_id\": \"c"
                + "f54bfa60c738515574809998f71bd62\",\r\n  \"external_id\": \"1000\",\r\n  \"from_n"
                + "umber\": \"62811949736\",\r\n  \"destination_number\": \"6285161422932\",\r\n  "
                + "\"caller_didgateway\": \"6285757920463\",\r\n  \"called_didgateway\": \"62857579"
                + "20463\"\r\n}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

}
