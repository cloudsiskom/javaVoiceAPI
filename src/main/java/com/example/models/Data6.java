/*
 * SiskomVoiceAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.models;

import com.example.models.containers.Data6Members;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for Data6 type.
 */
public class Data6 {
    private int queueId;
    private String queueName;
    private String musiclass;
    private String strategy;
    private List<Member> members;

    /**
     * Default constructor.
     */
    public Data6() {
    }

    /**
     * Initialization constructor.
     * @param  queueId  int value for queueId.
     * @param  queueName  String value for queueName.
     * @param  musiclass  String value for musiclass.
     * @param  strategy  String value for strategy.
     * @param  members  List of Member value for members.
     */
    public Data6(
            int queueId,
            String queueName,
            String musiclass,
            String strategy,
            List<Member> members) {
        this.queueId = queueId;
        this.queueName = queueName;
        this.musiclass = musiclass;
        this.strategy = strategy;
        this.members = members;
    }

    /**
     * Getter for QueueId.
     * @return Returns the int
     */
    @JsonGetter("queue_id")
    public int getQueueId() {
        return queueId;
    }

    /**
     * Setter for QueueId.
     * @param queueId Value for int
     */
    @JsonSetter("queue_id")
    public void setQueueId(int queueId) {
        this.queueId = queueId;
    }

    /**
     * Getter for QueueName.
     * @return Returns the String
     */
    @JsonGetter("queue_name")
    public String getQueueName() {
        return queueName;
    }

    /**
     * Setter for QueueName.
     * @param queueName Value for String
     */
    @JsonSetter("queue_name")
    public void setQueueName(String queueName) {
        this.queueName = queueName;
    }

    /**
     * Getter for Musiclass.
     * @return Returns the String
     */
    @JsonGetter("musiclass")
    public String getMusiclass() {
        return musiclass;
    }

    /**
     * Setter for Musiclass.
     * @param musiclass Value for String
     */
    @JsonSetter("musiclass")
    public void setMusiclass(String musiclass) {
        this.musiclass = musiclass;
    }

    /**
     * Getter for Strategy.
     * @return Returns the String
     */
    @JsonGetter("strategy")
    public String getStrategy() {
        return strategy;
    }

    /**
     * Setter for Strategy.
     * @param strategy Value for String
     */
    @JsonSetter("strategy")
    public void setStrategy(String strategy) {
        this.strategy = strategy;
    }

    /**
     * Getter for Members.
     * @return Returns the List of Member
     */
    @JsonGetter("members")
    public List<Member> getMembers() {
        return members;
    }

    /**
     * Setter for Members.
     * @param members Value for List of Member
     */
    @JsonSetter("members")
    public void setMembers(List<Member> members) {
        this.members = members;
    }

    /**
     * Converts this Data6 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Data6 [" + "queueId=" + queueId + ", queueName=" + queueName + ", musiclass="
                + musiclass + ", strategy=" + strategy + ", members=" + members + "]";
    }

    /**
     * Builds a new {@link Data6.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Data6.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(queueId, queueName, musiclass, strategy, members);
        return builder;
    }

    /**
     * Class to build instances of {@link Data6}.
     */
    public static class Builder {
        private int queueId;
        private String queueName;
        private String musiclass;
        private String strategy;
        private List<Member> members;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  queueId  int value for queueId.
         * @param  queueName  String value for queueName.
         * @param  musiclass  String value for musiclass.
         * @param  strategy  String value for strategy.
         * @param  members  List of Member value for members.
         */
        public Builder(int queueId, String queueName, String musiclass, String strategy,
                List<Member> members) {
            this.queueId = queueId;
            this.queueName = queueName;
            this.musiclass = musiclass;
            this.strategy = strategy;
            this.members = members;
        }

        /**
         * Setter for queueId.
         * @param  queueId  int value for queueId.
         * @return Builder
         */
        public Builder queueId(int queueId) {
            this.queueId = queueId;
            return this;
        }

        /**
         * Setter for queueName.
         * @param  queueName  String value for queueName.
         * @return Builder
         */
        public Builder queueName(String queueName) {
            this.queueName = queueName;
            return this;
        }

        /**
         * Setter for musiclass.
         * @param  musiclass  String value for musiclass.
         * @return Builder
         */
        public Builder musiclass(String musiclass) {
            this.musiclass = musiclass;
            return this;
        }

        /**
         * Setter for strategy.
         * @param  strategy  String value for strategy.
         * @return Builder
         */
        public Builder strategy(String strategy) {
            this.strategy = strategy;
            return this;
        }

        /**
         * Setter for members.
         * @param  members  List of Member value for members.
         * @return Builder
         */
        public Builder members(List<Member> members) {
            this.members = members;
            return this;
        }

        /**
         * Builds a new {@link Data6} object using the set fields.
         * @return {@link Data6}
         */
        public Data6 build() {
            return new Data6(queueId, queueName, musiclass, strategy, members);
        }
    }
}
